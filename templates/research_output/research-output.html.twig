{% extends 'base.html.twig' %}

{% block title %}Hello ResearchOutputController!{% endblock %}

{% block body %}
<fieldset>
<legend><h3>General Infos : </h3></legend>
{{form(formRO)}}
</fieldset>

<fieldset id="costField">
<legend><h3>Cost : </h3></legend>
{{form(formCost)}}
</fieldset>

<fieldset id="dataField">
<legend><h3>Data : </h3></legend>
{{form(formData)}}
</fieldset>

<fieldset id="serviceField">
<legend><h3>Service : </h3></legend>
{{form(formService)}}
</fieldset>

<fieldset id="metaDataField">
<legend><h3>Meta Data : </h3></legend>
{{form(formMetaData)}}
</fieldset>

<fieldset id="distribField">
<legend><h3>Distribution : </h3></legend>
{{form(formDistrib)}}
    <fieldset id="embargoField">
    <legend><h3>Embargo : </h3></legend>
    {{form(formEmbargo)}}
    </fieldset>
</fieldset>



<style>
.cache {
    display: none;
}
</style>
<script>
    
// ----------------------------- Section : Afficher ou non le formulaire Cost
    var costField = document.getElementById("costField");
    costField.classList.add("cache"); 
    function startCost()
    {
      document.getElementById("research_output_costs").addEventListener("change", checkIfCost, false);
    }

    function checkIfCost()
    {
        var selectCost = document.getElementById("research_output_costs").value;
        if (selectCost == false && costField.classList.contains("cache"))
        {
            costField.classList.remove("cache");
        }
        else
        {
            costField.classList.add("cache");
            // Rajouter de quoi vider les inputs ? (Ou alors je gère dans le controlleur pour ne rien lier au RO)
        }
    }
// ----------------------------- Fin section


// ----------------------------- Section : Afficher Data ou Service
    var serviceForm = document.getElementById("serviceField");
    var dataForm = document.getElementById("dataField");
    serviceForm.classList.add("cache"); 
    function startDataOrService()
    {
      document.getElementById("research_output_type").addEventListener("change", checkIfDataOrService, false);
    }

    function checkIfDataOrService()
    {
        var roType = document.getElementById("research_output_type").value;
        if (roType == "dataSet") // Si Data
        {
            dataField.classList.remove("cache"); 
            serviceField.classList.add("cache");
        }
        else  // Si service
        {
            dataField.classList.add("cache"); 
            serviceField.classList.remove("cache");
        }
    }
// ----------------------------- Fin section 

// ----------------------------- Section : Afficher ou non embargo
    var embargoField = document.getElementById("embargoField");
    embargoField.classList.add("cache"); 
    function startEmbargo()
    {
      document.getElementById("distribution_access").addEventListener("change", checkIfEmbargo, false);
    }

    function checkIfEmbargo()
    {
        var selectEmbargo = document.getElementById("distribution_access").value;
        if (selectEmbargo == "embargo" && embargoField.classList.contains("cache"))
        {
            embargoField.classList.remove("cache");
        }
        else
        {
            embargoField.classList.add("cache");
            // Rajouter de quoi vider les inputs ? (Ou alors je gère dans le controlleur pour ne rien lier au RO)
        }
    } 
// ----------------------------- Fin section



window.addEventListener("load", startCost, false);
window.addEventListener("load", startDataOrService, false);
window.addEventListener("load", startEmbargo, false);
</script>
{% endblock %}
